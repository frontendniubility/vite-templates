{
  //禁用vscode内置的CSS检验，改用stylelint插件
  //see https://marketplace.visualstudio.com/items?itemName=stylelint.vscode-stylelint
  "css.validate": true,
  "scss.validate": true,
  "less.validate": true,
  //忽视含@符开头的规则，例如: @apply
  "css.lint.unknownAtRules": "ignore",
  //忽视空规则的样式类，例如: .btn{}
  "css.lint.emptyRules": "ignore",
  "scss.lint.unknownAtRules": "ignore",
  "scss.lint.emptyRules": "ignore",
  "less.lint.unknownAtRules": "ignore",
  "less.lint.emptyRules": "ignore",
  //保存时格式化代码, 若开启了 vue3snippets 应关闭它
  "editor.formatOnSave": true,
  //格式化代码默认扩展为Prettier, 尽量不要和 vue3snippets 同时使用
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  //键入字符启动自动补全建议
  "editor.quickSuggestions": {
    "strings": true
  },
  //所有目录垂直树状
  "explorer.compactFolders": false,
  //prettier 格式化代码时使用单引号和无尾随分号
  "prettier.singleQuote": true,
  "prettier.semi": true,
  "prettier.endOfLine": "auto",
  "prettier.tabWidth": 2,
  "prettier.printWidth": 160,
  "prettier.trailingComma": "none",
  "prettier.bracketSpacing": true,
  "prettier.arrowParens": "avoid",
  "prettier.htmlWhitespaceSensitivity": "ignore",
  //禁用 "文件是 CommonJS 模块; 它可能会转换为 ES 模块" 提示
  "javascript.suggestionActions.enabled": false,
  "typescript.suggestionActions.enabled": false,
  //禁用 类型注释只能在 TypeScript 文件中使用 提示
  "javascript.validate.enable": false,
  "typescript.validate.enable": false,
  //指定包含要使用的 tsserver 和 lib*.d.ts 文件的文件夹路径
  "typescript.tsdk": "node_modules/typescript/lib",
  //静态WEB服务容器：域名或IP
  "liveServer.settings.host": "localhost",
  //静态WEB服务容器：定位执行目录
  "liveServer.settings.root": "/dist/",
  //静态WEB服务容器：端口
  "liveServer.settings.port": 8820,
  //静态WEB服务容器：刷新频率
  "liveServer.settings.wait": 1000,
  //静态WEB服务容器：自动打开
  "liveServer.settings.NoBrowser": false,
  //静态WEB服务容器：是否开启ChromeDebug
  "liveServer.settings.ChromeDebuggingAttachment": false,
  //#################################################################
  // SFC单页文件使用独立配置的语种，要即时提示需要在package.json文件配置：
  //=================================================================
  // 代码: "peerDependencies": {"@intlify/vue-i18n-loader": "^2.1.0"}
  //=================================================================
  // 更多配置 https://github.com/lokalise/i18n-ally/wiki/Configurations
  //--------------------------------------------------------------
  // "i18n-ally.disabled": true, //不开启多语言助手
  "i18n-ally.sortKeys": true, //翻译保存时重排序json键
  "i18n-ally.keystyle": "nested", //json键格式为 {"a": {"b": {"c": "..."}}}
  "i18n-ally.sourceLanguage": "zh-CN", //翻译源语言, 其它语言将从这个语种作为依据进行翻译
  //"i18n-ally.displayLanguage": "zh-CN", //强制编辑器显示的语言
  "i18n-ally.enabledParsers": ["json", "json5", "yaml"],
  "i18n-ally.enabledFrameworks": ["vue", "react", "vue-sfc"],
  "i18n-ally.annotationInPlace": false, //是否在路径原位显示翻译文案，而不是附加在末尾
  "i18n-ally.disablePathParsing": false, //是否禁用路径解析，目录结构时需设置为不要禁用(false)
  //--------------------------------------------------------------
  // 语言环境信息本地化进行按目录结构分布时需使用如下配置方可即时提示
  //--------------------------------------------------------------
  "i18n-ally.namespace": true,
  //--------------------------------------------------------------
  // 方式一: 示例语言位于 /src/langs 目录下
  //--------------------------------------------------------------
  // "i18n-ally.localesPaths": "src/langs",
  // "i18n-ally.pathMatcher": "{namespaces?}/?{locale}.{ext}",
  //--------------------------------------------------------------
  // 方式二: 示例语言位于 /src/locales 目录下
  //--------------------------------------------------------------
  "i18n-ally.localesPaths": "src/locales",
  "i18n-ally.pathMatcher": "{locale}/?{namespaces?}.{ext}",
  //--------------------------------------------------------------
  //#################################################################
  //配置eslint
  "editor.codeActionsOnSave": {
    "source.fixAll": false,
    //每次保存时将代码按eslint格式进行保存
    "source.fixAll.eslint": true
  },
  //eslint添加vue支持
  "eslint.validate": ["javascript", "vue", "html"],
  //资源管理器树图标
  "workbench.iconTheme": "material-icon-theme",
  "material-icon-theme.activeIconPack": "angular",
  "material-icon-theme.files.associations": {},
  "material-icon-theme.folders.associations": {
    "enum": "typescript",
    "enums": "typescript",
    "store": "context",
    "stores": "context",
    "composable": "hook",
    "composables": "hook",
    "directive": "tools",
    "directives": "tools",
    "business": "core",
    "request": "api",
    "adapter": "middleware"
  }
}
